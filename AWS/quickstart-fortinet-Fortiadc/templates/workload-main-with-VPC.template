{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Fortiadc Autoscale Solution (New VPC). This template deploys Fortinet Fortiadc cluster into an existing VPC with a Multi-AZ Autoscale group with Lambda and LifecycleHook. Please see the Quick Start documentation for more details. **WARNING** You will be billed for the Fortiadc On-Demand instances and related AWS resources if you create a stack from this template. (qs-1p3pr46rl)",
    "Parameters": {
        "CustomIdentifier": {
            "Type": "String",
            "Default": "fadcASG",
            "MaxLength": "10",
            "AllowedPattern": "[A-Za-z0-9]+",
            "ConstraintDescription": "must only contain uppercase and lowercase letters and numbers",
            "Description": "A custom identifier as resource name prefix. Must be at most 10 characters long and only contain uppercase, lowercase letters, and numbers. Max length is 10."
        },
        "QSS3BucketName": {
            "Type": "String",
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "aws-quickstart-fortiadc-autoscale",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
        },
        "QSS3KeyPrefix": {
            "Type": "String",
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Default": "quickstart-fortinet-Fortiadc/",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
        },
        "VpcId": {
            "Type": "AWS::EC2::VPC::Id",
            "Description": "The existing VPC IDs where you deploy the Auto-Scaling group and related resources. The VPC must have the option 'DNS hostnames' enabled."
        },
        "VPCCIDR": {
            "Type": "String",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
            "ConstraintDescription": "must be a valid CIDR block format.",
            "Description": "The CIDR block for the selected VPC."
        },
        "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet::Id",
            "Description": "Public (DMZ) subnet 1, which is located in Availability Zone 1."
        },
        "PublicSubnet2": {
            "Type": "AWS::EC2::Subnet::Id",
            "Description": "Public (DMZ) subnet 2, which is located in Availability Zone 2."
        },
        "FortiadcPAYGAMIType": {
            "Type": "String",
            "Default": "FAD-PAYG-1gbps",
            "AllowedValues": [
                "FAD-PAYG-100mbps",
                "FAD-PAYG-500mbps",
                "FAD-PAYG-1gbps",
                "FAD-PAYG-5gbps",
                "FAD-PAYG-10gbps"
            ],
            "ConstraintDescription": "must be a valid FortiADC PAYG image type.",
            "Description": "FortiADC PAYG image type."
        },
        "FortiadcInstanceType": {
           "Type": "String",
            "Default": "c5.2xlarge",
            "AllowedValues": [
                "m5.large",
                "m5.xlarge",
                "m5.2xlarge",
                "m5.4xlarge",
                "m5.8xlarge",
                "c5.large",
                "c5.xlarge",
                "c5.2xlarge",
                "c5.4xlarge",
                "c5.9xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type.",
            "Description": "EC2 Instance type to launch as Fortiadc On-Demand instances. FAD-PAYG-100mbps, FAD-PAYG-500mbps, and FAD-PAYG-1gbps support EC2 Instance type m5.large, m5.xlarge, m5.2xlarge, c5.large, c5.xlarge and c5.2xlarge; FAD-PAYG-5gbps and FAD-PAYG-10gbps support EC2 Instance type m5.2xlarge, m5.4xlarge, m5.8xlarge, c5.2xlarge, c5.4xlarge and c5.9xlarge. For more information about instance types, see https://aws.amazon.com/ec2/instance-types/."
        },
        "ExpireLifecycleEntry": {
            "Type": "Number",
            "Default": 300,
            "MinValue": 60,
            "MaxValue": 3600,
            "ConstraintDescription": "must be a valid number between 60 and 3600.",
            "Description": "Fortiadc instance lifecycle expiry entry (in seconds). Minimum is 60. Maximum is 3600."
        },
        "FortiadcAsgCooldown": {
            "Type": "Number",
            "Default": 300,
            "MinValue": 60,
            "MaxValue": 3600,
            "ConstraintDescription": "must be a valid number between 60 and 3600.",
            "Description": "Auto-Scaling group waits for the cooldown period (in seconds) to complete before resuming scaling activities. Minimum is 60. Maximum is 3600."
        },
        "FortiadcAsgDesiredCapacity": {
            "Type": "Number",
            "Default": 2,
            "MinValue": 2,
            "ConstraintDescription": "must be a valid number not less than 2.",
            "Description": "The number of Fortiadc instances the group should have at any time, also called desired capacity. Must keep at least 2 Fortiadcs in the group for High Availability. Minimum is 2."
        },
        "FortiadcAsgMinSize": {
            "Type": "Number",
            "Default": 2,
            "MinValue": 2,
            "ConstraintDescription": "must be a valid number not less than 2.",
            "Description": "Minimum number of Fortiadc instances in the Auto-Scaling Group. Minimum is 2."
        },
        "FortiadcAsgMaxSize": {
            "Type": "Number",
            "Default": 4,
            "MinValue": 2,
            "ConstraintDescription": "must be a valid number not less than 2.",
            "Description": "Maximum number of Fortiadc instances in the Auto-Scaling Group. Minimum is 2."
        },
        "FortiadcAsgHealthCheckGracePeriod": {
            "Type": "Number",
            "Default": 300,
            "MinValue": 60,
            "ConstraintDescription": "must be a valid number not less than 60.",
            "Description": "The length of time (in seconds) that Auto-Scaling waits before checking an instance's health status. Minimum is 60."
        },
        "FortiadcAsgScaleInThreshold": {
            "Type": "Number",
            "Default": 25,
            "MinValue": 1,
            "MaxValue": 100,
            "ConstraintDescription": "must be a valid number between 1 and 100.",
            "Description": "The threshold (in percentage) for the Fortiadc Auto-Scaling group to scale-in (remove) 1 instance. Minimum is 1. Maximum is 100."
        },
        "FortiadcAsgScaleOutThreshold": {
            "Type": "Number",
            "Default": 80,
            "MinValue": 1,
            "MaxValue": 100,
            "ConstraintDescription": "must be a valid number between 1 and 100.",
            "Description": "The threshold (in percentage) for the Fortiadc Auto-Scaling group to scale-out (add) 1 instance. Minimum is 1. Maximum is 100."
        },
        "FortiadcElbTgHealthyThreshold": {
            "Type": "Number",
            "Default": 2,
            "MinValue": 2,
            "MaxValue": 10,
            "ConstraintDescription": "must be a valid number not less than 2.",
            "Description": "The number of consecutive health check failures required before considering a Fortiadc instance unhealthy. Minimum is 2."
        },
        "FortiadcElbTgHCTimeout": {
            "Type": "Number",
            "Default": 2,
            "MinValue": 2,
            "MaxValue": 120,
            "ConstraintDescription": "must be a valid number not less than 2.",
            "Description": "The amount of time in seconds, during which no response from a Fortiadc instance means a failed health check. Minimum is 2."
        },
        "FortiadcElbTgHCInterval": {
            "Type": "Number",
            "Default": 5,
            "MinValue": 5,
            "MaxValue": 300,
            "ConstraintDescription": "must be a valid number not less than 5.",
            "Description": "The approximate amount of time in seconds between health checks of an individual Fortiadc instance. Minimum is 5."
        },
        "BalanceWebTrafficOverPort": {
            "Type": "Number",
            "Default": 443,
            "MinValue": 1,
            "MaxValue": 65535,
            "ConstraintDescription": "must be a valid port number between 1 and 65535.",
            "Description": "Receive HTTPS web service traffic through this port and load balance traffic to this port of FortiADC. Minimum is 1. Maximum is 65535."
        },
        "ElasticIPOption": {
            "Type": "String",
            "Default": "add a new Elastic IP",
            "AllowedValues": [
                "add a new Elastic IP",
            "use an Elastic IP specified below"
            ],
            "ConstraintDescription": "must choose from the provided options.",
            "Description": "Create new or use existing Elastic IP to manage FortiADC. Since autoscaling may create many instances, you need to log in to primary FortiADC on this IP address to manage all FortiADC instances. You can fill in the existing Elastic IP below, or let us create a new one for you. The default action is to use an existing Elastic IP."
        },
        "FortiadcElasticIP": {
            "Type": "String",
            "Default": "fadcASG-EIP",
            "Description": "Elastic IP address or name, through which you can manage primary FortiADC. If you use an existing Elastic IP, fill it's IP address in here. If you create a new Elastic IP, give it a name so that you can find it easily in the AWS console.",
            "AllowedPattern": "^.+$",
            "ConstraintDescription": "must be a valid IP address format or a valid tag value."
        },
        "FortiadcAdminPort": {
            "Type": "Number",
            "Default": 8443,
            "MinValue": 1,
            "MaxValue": 65535,
            "ConstraintDescription": "must be a valid port number between 1 and 65535.",
            "Description": "A port number for Fortiadc administration. Minimum is 1. Maximum is 65535. Do not use: 8080, 10443 because these are Fortiadc reserved ports."
        },
        "FortiadcAdminCidr": {
            "Type": "String",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
            "ConstraintDescription": "must be a valid CIDR block format and 0.0.0.0/0 is highly not recommended.",
            "Description": "CIDR block for external admin management access. **WARNING!** 0.0.0.0/0 accepts connections from any IP address. We recommend that you use a constrained CIDR range to reduce the potential of inbound attacks from unknown IP addresses."
        },
        "KeyPairName": {
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must specify an admin access key pair for Fortiadc instances.",
            "Description": "Amazon EC2 Key Pair for admin access."
        }
    },
    "Conditions": {
        "GovCloudCondition": {
            "Fn::Equals": [
                {
                    "Ref": "AWS::Region"
                },
                "us-gov-west-1"
            ]
        }
    },
    "Resources": {
        "StackDeployfadcAsgSolution": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "CustomIdentifier": {
                        "Ref": "CustomIdentifier"
                    },
                    "VpcId": {
                        "Ref": "VpcId"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    },
                    "PublicSubnet1": {
                        "Ref": "PublicSubnet1"
                    },
                    "PublicSubnet2": {
                        "Ref": "PublicSubnet2"
                    },
                    "FortiadcPAYGAMIType": {
                        "Ref": "FortiadcPAYGAMIType"
                    },
                    "FortiadcInstanceType": {
                        "Ref": "FortiadcInstanceType"
                    },
                    "ExpireLifecycleEntry": {
                        "Ref": "ExpireLifecycleEntry"
                    },
                    "FortiadcAsgCooldown": {
                        "Ref": "FortiadcAsgCooldown"
                    },
                    "FortiadcAsgDesiredCapacity": {
                        "Ref": "FortiadcAsgDesiredCapacity"
                    },
                    "FortiadcAsgMinSize": {
                        "Ref": "FortiadcAsgMinSize"
                    },
                    "FortiadcAsgMaxSize": {
                        "Ref": "FortiadcAsgMaxSize"
                    },
                    "FortiadcAsgHealthCheckGracePeriod": {
                        "Ref": "FortiadcAsgHealthCheckGracePeriod"
                    },
                    "FortiadcAsgScaleInThreshold": {
                        "Ref": "FortiadcAsgScaleInThreshold"
                    },
                    "FortiadcAsgScaleOutThreshold": {
                        "Ref": "FortiadcAsgScaleOutThreshold"
                    },
                    "FortiadcElbTgHealthyThreshold": {
                        "Ref": "FortiadcElbTgHealthyThreshold"
                    },
                    "FortiadcElbTgHCTimeout": {
                        "Ref": "FortiadcElbTgHCTimeout"
                    },
                    "FortiadcElbTgHCInterval": {
                        "Ref": "FortiadcElbTgHCInterval"
                    },
                    "BalanceWebTrafficOverPort": {
                        "Ref": "BalanceWebTrafficOverPort"
                    },
                    "FortiadcAdminPort": {
                        "Ref": "FortiadcAdminPort"
                    },
                    "FortiadcAdminCidr": {
                        "Ref": "FortiadcAdminCidr"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "ElasticIPOption": {
                        "Ref": "ElasticIPOption"
                    },
                    "FortiadcElasticIP": {
                        "Ref": "FortiadcElasticIP"
                    },
                    "ResourceTagPrefix": {
                        "Fn::Join": [
                            "-",
                        [
                        {
                            "Ref": "CustomIdentifier"
                        },
                        {
                            "Fn::Select": [
                                0,
                            {
                                "Fn::Split": [
                                    "-",
                                {
                                    "Fn::Select": [
                                        2,
                                    {
                                        "Fn::Split": [
                                            "/",
                                        {
                                            "Ref": "AWS::StackId"
                                        }
                                        ]
                                    }
                                    ]
                                }
                                ]
                            }
                            ]
                        }
                        ]
                        ]
                    },
                    "UniqueID": {
                        "Fn::Select": [
                            0,
                            {
                                "Fn::Split": [
                                    "-",
                                    {
                                        "Fn::Select": [
                                            2,
                                            {
                                                "Fn::Split": [
                                                    "/",
                                                    {
                                                        "Ref": "AWS::StackId"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                },
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}templates/workload.template",
                        {
                            "QSS3Region": {
                                "Fn::If": [
                                    "GovCloudCondition",
                                    "s3-us-gov-west-1",
                                    "s3"
                                ]
                            }
                        }
                    ]
                },
                "TimeoutInMinutes": "30"
            }
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network configuration"
                    },
                    "Parameters": [
                        "VpcId",
                        "VPCCIDR",
                        "PublicSubnet1",
                        "PublicSubnet2"
                    ]
                },
                {
                    "Label": {
                        "default": "Fortiadc configuration"
                    },
                    "Parameters": [
                        "CustomIdentifier",
                        "FortiadcPAYGAMIType",
                        "FortiadcInstanceType",
                        "FortiadcAdminPort",
                        "FortiadcAdminCidr",
                        "KeyPairName",
                        "ElasticIPOption",
                        "FortiadcElasticIP"
                    ]
                },
                {
                    "Label": {
                        "default": "FortiADC auto-scaling group configuration"
                    },
                    "Parameters": [
                        "ExpireLifecycleEntry",
                        "FortiadcAsgDesiredCapacity",
                        "FortiadcAsgMinSize",
                        "FortiadcAsgMaxSize",
                        "FortiadcAsgHealthCheckGracePeriod",
                        "FortiadcAsgCooldown",
                        "FortiadcAsgScaleOutThreshold",
                        "FortiadcAsgScaleInThreshold",
                        "FortiadcElbTgHealthyThreshold",
                        "FortiadcElbTgHCTimeout",
                        "FortiadcElbTgHCInterval"
                    ]
                },
                {
                    "Label": {
                        "default": "Load balancing configuration"
                    },
                    "Parameters": [
                        "BalanceWebTrafficOverPort"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "CustomIdentifier": {
                    "default": "Resource name prefix"
                },
                "VPCCIDR": {
                    "default": "VPC CIDR"
                },
                "PublicSubnet1CIDR": {
                    "default": "Public subnet 1 CIDR"
                },
                "PublicSubnet2CIDR": {
                    "default": "Public subnet 2 CIDR"
                },
                "FortiadcPAYGAMIType": {
                    "default": "Fortiadc PAYG AMI Type"
                },
                "FortiadcInstanceType": {
                    "default": "EC2 Instance type"
                },
                "LambdaDeploymentMethod": {
                    "default": "Deployment method"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 bucket name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 key prefix"
                },
                "ExpireLifecycleEntry": {
                    "default": "Instance lifecycle expiry"
                },
                "FortiadcAsgCooldown": {
                    "default": "Scaling cooldown period"
                },
                "FortiadcAsgDesiredCapacity": {
                    "default": "Desired capacity"
                },
                "FortiadcAsgMinSize": {
                    "default": "Minimum group size"
                },
                "FortiadcAsgMaxSize": {
                    "default": "Maximum group size"
                },
                "FortiadcAsgHealthCheckGracePeriod": {
                    "default": "Health check grace period"
                },
                "FortiadcAsgScaleInThreshold": {
                    "default": "Scale-in threshold"
                },
                "FortiadcAsgScaleOutThreshold": {
                    "default": "Scale-out threshold"
                },
                "FortiadcElbTgHealthyThreshold": {
                    "default": "Healthy threshold"
                },
                "FortiadcElbTgHCTimeout": {
                    "default": "Health Check Timeout"
                },
                "FortiadcElbTgHCInterval": {
                    "default": "Health Check Interval"
                },
                "BalanceWebTrafficOverPort": {
                    "default": "Web service traffic port"
                },
                "FortiadcAdminPort": {
                    "default": "Admin port"
                },
                "FortiadcAdminCidr": {
                    "default": "Admin CIDR block"
                },
                "KeyPairName": {
                    "default": "Key pair name"
                },
                "ElasticIPOption": {
                    "default": "FortiADC Elastic IP option"
                },
                "FortiadcElasticIP": {
                    "default": "FortiADC Elastic IP or Name"
                }
            }
        }
    },
    "Outputs": {
        "CustomIdentifier": {
            "Description": "A custom identifier as resource name prefix on those resources that have a strict naming requirement.",
                "Value": {
                    "Ref": "CustomIdentifier"
                }
        },
        "UniqueID": {
            "Description": "An automatically generated random string as a unique ID for all resources in the deployment stack and nested stack.",
            "Value": {
                "Fn::Select": [
                    0,
                {
                    "Fn::Split": [
                        "-",
                    {
                        "Fn::Select": [
                            2,
                        {
                            "Fn::Split": [
                                "/",
                            {
                                "Ref": "AWS::StackId"
                            }
                            ]
                        }
                        ]
                    }
                    ]
                }
                ]
            }
        },
        "ResourceTagPrefix" :{
            "Description": "The Value for the Tag Key 'ResourceGroup' on all resources deployed in this stack.",
            "Value": {
                "Fn::Join": [
                    "-",
                [
                {
                    "Ref": "CustomIdentifier"
                },
                {
                    "Fn::Select": [
                        0,
                    {
                        "Fn::Split": [
                            "-",
                        {
                            "Fn::Select": [
                                2,
                            {
                                "Fn::Split": [
                                    "/",
                                {
                                    "Ref": "AWS::StackId"
                                }
                                ]
                            }
                            ]
                        }
                        ]
                    }
                    ]
                }
                ]
                ]

            }
        }
    }
}
